# golfball.rib
Option "searchpath" "shader" ["./"]

Display "golfball.exr" "it" "rgba"
# Format 640 480 1.0
Format 1920 1028 1.0

Projection "perspective" "float fov" [45]

Hider "raytrace" "int incremental" [1] "int maxsamples" [16]
Integrator "PxrPathTracer" "integrator"
PixelFilter "gaussian" 2 2

WorldBegin
    Translate 0 0 5

    # lighting
	# AttributeBegin
    #     Attribute "identifier" "string name" ["envLight"]
    #     TransformBegin
    #         Rotate -45 1 0 0    # tilt sun downward
    #         Rotate 60 0 1 0     # swing sun to side
    #         Light "PxrEnvDayLight" "envLight"
    #             "float intensity" [5]
    #             "int month" [6]
    #             "int day" [20]
    #             "float hour" [21.0]
    #     TransformEnd
    # AttributeEnd

    # 3 point light rig
    AttributeBegin
        # Key light — front-left (main shape/shine)
        Attribute "visibility" "int camera" [0] "int indirect" [0] "int transmission" [1]
        TransformBegin
            Translate -1.5 1.5 -2
            Light "PxrSphereLight" "keyLight"
                "float intensity" [12.0]
                "int enableTemperature" [1]
                "float temperature" [6400]
                "int enableShadows" [1]
                "color shadowColor" [0 0 0]
        TransformEnd

        # Fill light — front-right (soften shadows)
        TransformBegin
            Translate 1.7 1 -1.8
            Light "PxrSphereLight" "fillLight"
                "float intensity" [0.8]
                "int enableTemperature" [1]
                "float temperature" [6300]
                "int enableShadows" [0]
        TransformEnd

        # Rim light — behind left (adds silhouette edge)
        TransformBegin
            Translate -1.0 1.5 2
            Light "PxrSphereLight" "rimLight"
                "float intensity" [7.5]
                "int enableTemperature" [1]
                "float temperature" [6000]
                "int enableShadows" [0]
        TransformEnd

        # Extra low-side fill (form light)
        TransformBegin
            Translate -2 0.5 -1.5
            Light "PxrSphereLight" "formFill"
                "float intensity" [1.2]
                "float exposure" [0]
                "float radius" [0.05]
                "color lightColor" [1 1 1]
                "int enableShadows" [1]
                "color shadowColor" [0 0 0]
        TransformEnd

        TransformBegin
            Translate 1.2 2.5 -1.8
            Light "PxrSphereLight" "deskLamp"
                "float intensity" [3.5]
                "float radius" [0.03]
                "color lightColor" [1 1 1]
                "int enableShadows" [1]
        TransformEnd
    AttributeEnd

    # ground plane
    AttributeBegin
        Bxdf "PxrSurface" "PxrGroundSurface"
            "color diffuseColor" [0.1 0.1 0.3]
            "float diffuseGain" [1]
        Polygon "P" [-5 -1 5
                      5 -1 5 
                      5 -1 -5
                     -5 -1 -5]
    AttributeEnd

    # golf ball
    AttributeBegin
        Rotate -75 1 0 0

        Attribute "displacementbound" "sphere" [0.1]
        Attribute "dice" "float micropolygonlength" [0.5]

        # 1. Call the OSL pattern shader to compute dispAmount
        Pattern "dimples" "dimplePattern"
            "float dimple_radius" [0.105]
            "float dimple_depth" [0.2]
            "int numDimples" [356]

        # 2. Pass dispAmount to PxrDisplace
        Displace "PxrDisplace" "golfballDisp"
            "float dispAmount" [0.1]  # will be overridden by reference
            "reference float dispScalar" ["dimplePattern:dispAmount"]

        # For Testing without lights (e.g. checking dimples)
        # Bxdf "PxrSurface" "PxrSurface1"
        #     "color diffuseColor" [0.9 0.9 0.9]    # White ball
        #     "float diffuseGain" [1]
        #     "color specularFaceColor" [1 1 1]     # Shiny highlights

        Bxdf "PxrSurface" "PxrGolfBall"
            # Red plastic base
            "color diffuseColor" [0.85 0.0 0.0]
            "float diffuseGain" [1.0]
            "float diffuseExponent" [0.0]

            # Specular coating (plastic shine)
            "int specularFresnelMode" [1] #setting it 1 will ignore faceColor and fresnelExponent
            "float specularRoughness" [0.2]
            "color specularEdgeColor" [0.2 0.2 0.2]
            # "color specularFaceColor" [0.25 0.25 0.25]
            "color specularIor" [1.45 1.45 1.45]

            "color clearcoatFaceColor" [0.005 0.005 0.005]    # Subtle gloss contribution
            "color clearcoatEdgeColor" [0.1 0.1 0.1]    # Stronger at glancing angles
            "float clearcoatRoughness" [0.06]            # Sharp highlight
            "float clearcoatAnisotropy" [0.0]

            # Enable bump-like shading from dimples
            "int specularModelType" [1]  # GGX is better for rough surfaces

        Sphere 1 -1 1 360

    AttributeEnd

WorldEnd