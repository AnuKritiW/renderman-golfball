// dimples.osl
/*
    Pattern Shader: Dimple Displacement Amount Calculator
    -----------------------------------------------------
    This shader computes the scalar displacement amount (`dispAmount`) for each point
    on a sphere based on proximity to procedural dimple centers.

    Use this output as input to PxrDisplace in a RenderMan RIS setup.
*/
#include "dimple_centers.oslinclude"

shader dimples(
    float dimple_radius = 0.115,
    float dimple_depth = 0.2,
    int numDimples = 392,
    output float dispAmount = 0.0)
{
    // vector pos = normalize(vector(P));  // unit sphere
    vector pos = normalize(transform("object", P));

    float displaceVal = 0.0;

    for (int i = 0; i < numDimples; ++i) {
        point center = get_dimple_center(i);
        float angle = acos(dot(pos, normalize(vector(center))));

        if (angle < dimple_radius) {
            float falloff = 1.0 - smoothstep(0.0, dimple_radius, angle);
            displaceVal -= falloff * dimple_depth;
        }
    }

    dispAmount = displaceVal;
}